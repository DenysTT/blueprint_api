---
- name: Test containers running
  assert:
    that:
       - "app.blueprint_api_app_1.state.running"
       - "app.blueprint_api_app_1.state.status == 'running'"

- name: Register container pid
  shell: sudo docker inspect -f \{\{.State.Pid\}\} blueprint_api_app_1
  register: container_pid_1

- name: Wait for 30 seconds to check is container restarting
  pause:
    seconds: 30

- name: Register container state
  shell: sudo docker inspect -f \{\{.State.Restarting\}\} blueprint_api_app_1
  register: is_container_restarting

- name: Test container is not restarting
  assert:
    that:
     - "is_container_restarting.stdout == 'false'"

- name: register container pid to ensure that it wasn't changed
  shell: sudo docker inspect -f \{\{.State.Pid\}\} blueprint_api_app_1
  register: container_pid_2

- name: Check that pid wasn't changed
  assert:
    that: container_pid_1.stdout == container_pid_2.stdout

- name: Test heartbeat
  uri:
    url: http://localhost:{{ blueprint_api_docker_port }}/heartbeat
  register: result
  retries: 20
  delay: 5
  until: result.status == 200


